server {
    listen 80;
    server_name internal.example.com;

    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Handle OPTIONS method for CORS
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Express.js API endpoints
    location /api/ {
        auth_request /auth;
        auth_request_set $user $upstream_http_x_user;
        
        # Proxy to Express.js
        proxy_pass http://express:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-User $user;
        
        # Handle auth errors
        error_page 401 = @error401;
    }

    # Static content
    location / {
        auth_request /auth;
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
        error_page 401 = @error401;
    }

    # Authentication endpoint
    location = /auth {
        internal;
        proxy_pass http://auth:5000/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Authorization $http_authorization;
    }

    # Error handling
    location @error401 {
        add_header WWW-Authenticate 'Basic realm="LDAP Authentication"' always;
        return 401 "Authentication required";
    }
} 